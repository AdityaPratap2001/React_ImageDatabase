{"version":3,"sources":["api/unsplash.js","Components/ImageCard.js","Components/ImageList.js","Components/SearchBar.js","App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","ImageCard","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","React","createRef","this","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","Component","ImageList","images","map","key","id","className","SearchBar","term","onFormSubmit","event","preventDefault","onSubmit","type","value","onChange","e","target","placeholder","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","getElementById"],"mappings":"kTAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2DC6BJC,E,kDA/Bb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IASRC,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAO,IAC/B,EAAKO,SAAS,CAAEH,WAZhB,EAAKI,MAAQ,CAAEJ,MAAQ,GACvB,EAAKH,SAAWQ,IAAMC,YAHN,E,gEAOhBC,KAAKV,SAASC,QAAQU,iBAAiB,OAAOD,KAAKZ,Y,+BAU3C,IAAD,EACoBY,KAAKb,MAAMe,MAA/BC,EADA,EACAA,YAAYC,EADZ,EACYA,KAEnB,OACE,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUN,KAAKH,MAAMJ,SAC3C,yBAAKc,IAAKP,KAAKV,SACVkB,IAAKL,EACLM,IAAKL,EAAKM,e,GAzBCC,aCcTC,G,MAZG,SAAAzB,GAChB,IAAM0B,EAAS1B,EAAM0B,OAAOC,KAAI,SAACZ,GAC/B,OAAO,kBAAC,EAAD,CAAWa,IAAKb,EAAMc,GAAId,MAAOA,OAG1C,OACE,yBAAKe,UAAU,cACZJ,KCqBQK,G,kNA5BbrB,MAAQ,CAACsB,KAAO,I,EAEhBC,aAAe,SAAAC,GACbA,EAAMC,iBACN,EAAKnC,MAAMoC,SAAS,EAAK1B,MAAMsB,O,uDAGvB,IAAD,OACP,OACE,yBAAKF,UAAU,cACb,0BAAMM,SAAUvB,KAAKoB,aAAcH,UAAU,WAC3C,yBAAKA,UAAU,SAEb,+CACA,2BACEO,KAAK,OACLC,MAAOzB,KAAKH,MAAMsB,KAClBO,SAAU,SAAAC,GAAC,OAAI,EAAK/B,SAAS,CAAEuB,KAAOQ,EAAEC,OAAOH,SAC/CI,YAAY,sC,GApBFlB,cCyBTmB,E,4MAnBbjC,MAAQ,CAAEgB,OAAS,I,EAEnBkB,e,uCAAiB,WAAOZ,GAAP,eAAAa,EAAA,sEACQC,EAASC,IAAI,iBAAiB,CACnDC,OAAQ,CAAEC,MAAOjB,KAFJ,OACTkB,EADS,OAIf,EAAKzC,SAAS,CAAEiB,OAASwB,EAASC,KAAKC,UAJxB,2C,6GAQf,OACE,yBAAKtB,UAAU,eAAeZ,MAAO,CAACmC,UAAU,SAC9C,kBAAC,EAAD,CAAWjB,SAAUvB,KAAK+B,iBAC1B,kBAAC,EAAD,CAAWlB,OAAQb,KAAKH,MAAMgB,c,GAfpBF,aCDlB8B,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.6083264a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.unsplash.com',\r\n  headers: {\r\n    Authorization: 'Client-ID 0lNGj3s3IlETyHwUQEStIEa7LaAFQWtH3fz4M5onUYQ'\r\n  }\r\n});","import React, { Component } from 'react';\r\n\r\nclass ImageCard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { spans : 0};\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.imageRef.current.addEventListener('load',this.setSpans);\r\n  }\r\n\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n\r\n    const spans = Math.ceil(height/10);\r\n    this.setState({ spans })\r\n  }\r\n\r\n  render() {\r\n    const {description,urls} = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\r\n        <img ref={this.imageRef}\r\n             alt={description}\r\n             src={urls.regular}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;","import React from 'react';\r\nimport ImageCard from './ImageCard';\r\nimport './ImageList.css';\r\n\r\nconst ImageList = props => {\r\n  const images = props.images.map((image) => {\r\n    return <ImageCard key={image.id} image={image}/>;\r\n  })\r\n\r\n  return(\r\n    <div className=\"image-list\">\r\n      {images}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageList;","import React, { Component } from 'react';\r\n\r\nclass SearchBar extends Component {\r\n  \r\n  state = {term : \"\"}\r\n\r\n  onFormSubmit = event =>{\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.term);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n                              \r\n            <label>Image Search</label>\r\n            <input \r\n              type=\"text\" \r\n              value={this.state.term} \r\n              onChange={e => this.setState({ term : e.target.value })}\r\n              placeholder=\"What are you lookinig for?\"\r\n            />\r\n\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\nimport unsplash from './api/unsplash';\nimport ImageList from './Components/ImageList';\nimport './App.css';\nimport SearchBar from './Components/SearchBar';\n\nclass App extends Component {\n\n  state = { images : []};\n\n  onSearchSubmit = async (term) => {\n    const response = await unsplash.get('/search/photos',{\n      params: { query: term },\n    })\n    this.setState({ images : response.data.results})\n  }\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{marginTop:'20px'}}>\n        <SearchBar onSubmit={this.onSearchSubmit}/>\n        <ImageList images={this.state.images}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}